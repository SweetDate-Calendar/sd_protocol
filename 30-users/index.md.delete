---
title: Users
nav_order: 30
layout: home
has_children: true
---

# USERS â€” Command Reference

This page specifies commands for working with users and their calendar associations.  
Each section documents parameters, response types, and examples.

---

### LIST_USERS
Returns users ordered by name ascending.

**Request**
```
GET /api/v1/users?limit=25&offset=0
```

**Response**
```
{
  "status": "ok",
  "result": {
    "users": [
      {
        "id": "u1",
        "name": "Alice",
        "email": "alice@example.com",
        "inserted_at": "2025-08-18T09:20:00Z",
        "updated_at": "2025-08-19T10:15:00Z"
      }
    ],
    "limit": 25,
    "offset": 0
  }
}
```

**Error**
```
{
  "error": "invalid",
  "details": {
    "limit": ["must be between 1 and 100"],
    "offset": ["must be >= 0"]
  }
}
```

---

### CREATE
Create a new user.

**Request**
```
POST /api/v1/users
{
  "name": "Bob",
  "email": "bob@example.com"
}
```

**Response**
```
{
  "status": "ok",
  "user": {
    "id": "u2",
    "name": "Bob",
    "email": "bob@example.com"
  }
}
```

**Error**
```
{ "status": "error", "message": "validation failed" }
```

---

### GET
Get a single user by ID.

**Request**
```
GET /api/v1/users/:id
```

**Response**
```
{
  "status": "ok",
  "user": {
    "id": "u1",
    "name": "Alice",
    "email": "alice@example.com"
  }
}
```

**Error**
```
{ "status": "error", "message": "not found" }
```

---

### UPDATE
Update an existing user.

**Request**
```
PUT /api/v1/users/:id
{
  "name": "Alice Smith"
}
```

**Response**
```
{
  "status": "ok",
  "user": {
    "id": "u1",
    "name": "Alice Smith",
    "email": "alice@example.com"
  }
}
```

**Error**
```
{ "status": "error", "message": "not found or invalid input" }
```

---

### DELETE
Delete a user.

**Request**
```
DELETE /api/v1/users/:id
```

**Response**
```
{
  "status": "ok",
  "user": {
    "id": "u1",
    "name": "Alice"
  }
}
```

**Error**
```
{ "status": "error", "message": "not found" }
```

---

### LIST_CALENDARS
List all calendars owned by a user.

**Request**
```
GET /api/v1/users/:user_id/calendars
```

**Response**
```
{
  "status": "ok",
  "user_calendars": [
    { "id": "uc-1", "user_id": "u1", "calendar_id": "c1", "role": "owner" }
  ]
}
```

**Error**
```
{ "status": "error", "message": "unauthorized" }
```

---

### CREATE_CALENDAR
Attach a calendar to a user.

**Request**
```
POST /api/v1/users/:user_id/calendars
{
  "calendar_id": "c1",
  "role": "editor"
}
```

**Response**
```
{
  "status": "ok",
  "user_calendar": {
    "id": "uc-1",
    "user_id": "u1",
    "calendar_id": "c1",
    "role": "editor"
  }
}
```

**Error**
```
{ "status": "error", "message": "invalid user or calendar" }
```

---

### GET_CALENDAR
Get a user calendar by ID.

**Request**
```
GET /api/v1/users/:user_id/calendars/:id
```

**Response**
```
{
  "status": "ok",
  "user_calendar": {
    "id": "uc-1",
    "user_id": "u1",
    "calendar_id": "c1",
    "role": "editor"
  }
}
```

**Error**
```
{ "status": "error", "message": "not found" }
```

---

### UPDATE_CALENDAR
Update a user calendar association.

**Request**
```
PUT /api/v1/users/:user_id/calendars/:id
{
  "role": "owner"
}
```

**Response**
```
{
  "status": "ok",
  "user_calendar": { "id": "uc-1", "role": "owner" }
}
```

**Error**
```
{ "status": "error", "message": "not found or invalid role" }
```

---

### DELETE_CALENDAR
Delete a user calendar association.

**Request**
```
DELETE /api/v1/users/:user_id/calendars/:id
```

**Response**
```
{ "status": "ok", "user_calendar": { "id": "uc-1" } }
```

**Error**
```
{ "status": "error", "message": "not found" }
```
